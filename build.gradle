plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.hhplus.be'
version = getGitHash()

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2024.0.0'
	}
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// DB
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Redis
	implementation 'org.redisson:redisson-spring-boot-starter:3.27.0'

	// Spring Retry
	implementation 'org.springframework.retry:spring-retry'

	// Lombok
	implementation 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testImplementation 'org.projectlombok:lombok:1.18.26'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'org.awaitility:awaitility:4.2.0'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.withType(Test).configureEach {
	useJUnitPlatform()
	systemProperty 'user.timezone', 'UTC'
}

def getGitHash() {
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}
